{"version":3,"file":"react-decision-tree-flow.esm.js","sources":["../src/Wizard.tsx","../src/Step.tsx","../src/Controls.tsx","../src/Shared.tsx"],"sourcesContent":["import React, { PropsWithChildren, ReactElement } from 'react';\r\nimport { Tree, ControlType, WizardContext } from 'Shared';\r\n\r\nexport interface WizardProps<T extends Tree> {\r\n  tree: T;\r\n  first: keyof T;\r\n}\r\n\r\nexport function Wizard<T extends Tree>({\r\n  children,\r\n  tree,\r\n  first,\r\n}: PropsWithChildren<WizardProps<T>>): ReactElement {\r\n  const [step, setStep] = React.useState<keyof T>(first);\r\n\r\n  const getControls = () => {\r\n    const possibleSteps = tree[step];\r\n    return possibleSteps.reduce<ControlType<T>>((accum, step) => {\r\n      const next = {\r\n        [step]: () => {\r\n          setStep(step);\r\n        },\r\n      };\r\n      return {\r\n        ...accum,\r\n        ...next,\r\n      };\r\n    }, {} as ControlType<T>);\r\n  };\r\n\r\n  return (\r\n    <WizardContext.Provider\r\n      value={{\r\n        tree,\r\n        step: step as string,\r\n        setStep: setStep as React.Dispatch<React.SetStateAction<any>>,\r\n        getControls: getControls as () => Record<string, any>,\r\n      }}\r\n    >\r\n      {children}\r\n    </WizardContext.Provider>\r\n  );\r\n}\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { WizardContext, Tree } from 'Shared';\r\n\r\nexport interface StepProps<T> {\r\n  name: keyof T;\r\n}\r\n\r\nexport function Step<T extends Tree>({\r\n  children,\r\n  name,\r\n}: PropsWithChildren<StepProps<T>>) {\r\n  const { step } = React.useContext(WizardContext);\r\n  return <>{step === name && children}</>;\r\n}\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { Tree, WizardContext, WizardContextProps } from 'Shared';\r\n\r\nexport interface ControlHook<T extends Tree> {\r\n  step: keyof T;\r\n  tree: T;\r\n  destinations: Record<keyof T, () => void>;\r\n}\r\n\r\nexport function useControls<T extends Tree>(): ControlHook<T> {\r\n  const { getControls, step, tree } = React.useContext(\r\n    WizardContext as React.Context<WizardContextProps<T>>\r\n  );\r\n  return { step, tree, destinations: getControls() };\r\n}\r\n\r\nexport interface ControlProps<T extends Tree> {\r\n  children: (steps: ControlHook<T>) => React.ReactNode;\r\n}\r\n\r\nexport function Controls<T extends Tree>({\r\n  children,\r\n}: PropsWithChildren<ControlProps<T>>) {\r\n  const getControls = useControls<T>();\r\n  return <>{children({ ...getControls })}</>;\r\n}\r\n","import React from 'react';\r\n\r\nexport interface Tree {\r\n  readonly [step: string]: readonly string[];\r\n}\r\n\r\nexport type ControlType<T extends Tree> = Record<keyof T, () => void>;\r\n\r\nexport interface WizardContextProps<T extends Tree> {\r\n  tree: T;\r\n  step: string;\r\n  setStep: React.Dispatch<React.SetStateAction<keyof T>>;\r\n  getControls: () => ControlType<T>;\r\n}\r\n\r\nexport const WizardContext = React.createContext<WizardContextProps<any>>({\r\n  tree: {},\r\n  step: '',\r\n  setStep: () => {},\r\n  getControls: () => ({}),\r\n});\r\n"],"names":["Wizard","children","tree","first","React","useState","step","setStep","getControls","possibleSteps","reduce","accum","next","WizardContext","Provider","value","Step","name","useContext","useControls","destinations","Controls","createContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;SAQgBA;MACdC,gBAAAA;MACAC,YAAAA;MACAC,aAAAA;;wBAEwBC,KAAK,CAACC,QAAN,CAAwBF,KAAxB;MAAjBG;MAAMC;;AAEb,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAClB,QAAMC,aAAa,GAAGP,IAAI,CAACI,IAAD,CAA1B;AACA,WAAOG,aAAa,CAACC,MAAd,CAAqC,UAACC,KAAD,EAAQL,IAAR;;;AAC1C,UAAMM,IAAI,sBACPN,IADO,IACA;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAHO,QAAV;AAKA,0BACKK,KADL,MAEKC,IAFL;AAID,KAVM,EAUJ,EAVI,CAAP;AAWD,GAbD;;AAeA,SACER,mBAAA,CAACS,eAAa,CAACC,QAAf;AACEC,IAAAA,KAAK,EAAE;AACLb,MAAAA,IAAI,EAAJA,IADK;AAELI,MAAAA,IAAI,EAAEA,IAFD;AAGLC,MAAAA,OAAO,EAAEA,OAHJ;AAILC,MAAAA,WAAW,EAAEA;AAJR;GADT,EAQGP,QARH,CADF;AAYD;;SCnCee;MACdf,gBAAAA;MACAgB,YAAAA;;0BAEiBb,KAAK,CAACc,UAAN,CAAiBL,eAAjB;MAATP,yBAAAA;;AACR,SAAOF,mBAAA,eAAA,MAAA,EAAGE,IAAI,KAAKW,IAAT,IAAiBhB,QAApB,CAAP;AACD;;SCJekB;0BACsBf,KAAK,CAACc,UAAN,CAClCL,eADkC;MAA5BL,gCAAAA;MAAaF,yBAAAA;MAAMJ,yBAAAA;;AAG3B,SAAO;AAAEI,IAAAA,IAAI,EAAJA,IAAF;AAAQJ,IAAAA,IAAI,EAAJA,IAAR;AAAckB,IAAAA,YAAY,EAAEZ,WAAW;AAAvC,GAAP;AACD;AAMD,SAAgBa;MACdpB,gBAAAA;AAEA,MAAMO,WAAW,GAAGW,WAAW,EAA/B;AACA,SAAOf,mBAAA,eAAA,MAAA,EAAGH,QAAQ,cAAMO,WAAN,EAAX,CAAP;AACD;;ICVYK,aAAa,gBAAGT,KAAK,CAACkB,aAAN,CAA6C;AACxEpB,EAAAA,IAAI,EAAE,EADkE;AAExEI,EAAAA,IAAI,EAAE,EAFkE;AAGxEC,EAAAA,OAAO,EAAE,qBAH+D;AAIxEC,EAAAA,WAAW,EAAE;AAAA,WAAO,EAAP;AAAA;AAJ2D,CAA7C,CAAtB;;;;"}